{"ast":null,"code":"var _jsxFileName = \"C:\\\\Shail\\\\Toyota Microdoppler\\\\purdue-microdoppler\\\\src\\\\components\\\\Paper.jsx\",\n  _s = $RefreshSig$();\n// src/components/Paper.jsx\nimport React, { useState } from \"react\";\nimport { Document, Page } from \"react-pdf\";\nimport { GlobalWorkerOptions, version as pdfjsVersion } from \"pdfjs-dist\";\nimport \"./Paper.css\";\n\n// Use the worker from the installed pdfjs-dist version\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nGlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsVersion}/pdf.worker.min.js`;\nconst Paper = () => {\n  _s();\n  const [numPages, setNumPages] = useState(null);\n  const [loadError, setLoadError] = useState(\"\");\n  const pdfFile = \"/Files/TEST DOCUMENT FOR WEB DEVELOPMENT.pdf\"; // or your Azure URL\n\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setNumPages(numPages);\n    setLoadError(\"\");\n  };\n  const onDocumentLoadError = err => {\n    console.error(\"PDF load error:\", err);\n    setLoadError(\"Failed to load PDF file.\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paper-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"paper-title\",\n      children: \"Research Paper Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paper-viewer scroll-mode\",\n      children: /*#__PURE__*/_jsxDEV(Document, {\n        file: pdfFile,\n        onLoadSuccess: onDocumentLoadSuccess,\n        onLoadError: onDocumentLoadError,\n        loading: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading PDF\\u2026\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 20\n        }, this),\n        error: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: loadError || \"Failed to load PDF file.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 18\n        }, this),\n        children: numPages && Array.from({\n          length: numPages\n        }, (_, i) => /*#__PURE__*/_jsxDEV(Page, {\n          pageNumber: i + 1,\n          renderTextLayer: false,\n          renderAnnotationLayer: false,\n          className: \"pdf-page\"\n        }, `page_${i + 1}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paper-download\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: pdfFile,\n        download: true,\n        className: \"download-btn\",\n        children: \"\\u2B07 Download PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Paper, \"C5cjhLSpC3RLgiVQ4GEViAeAl7Q=\");\n_c = Paper;\nexport default Paper;\nvar _c;\n$RefreshReg$(_c, \"Paper\");","map":{"version":3,"names":["React","useState","Document","Page","GlobalWorkerOptions","version","pdfjsVersion","jsxDEV","_jsxDEV","workerSrc","Paper","_s","numPages","setNumPages","loadError","setLoadError","pdfFile","onDocumentLoadSuccess","onDocumentLoadError","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","file","onLoadSuccess","onLoadError","loading","Array","from","length","_","i","pageNumber","renderTextLayer","renderAnnotationLayer","href","download","_c","$RefreshReg$"],"sources":["C:/Shail/Toyota Microdoppler/purdue-microdoppler/src/components/Paper.jsx"],"sourcesContent":["// src/components/Paper.jsx\r\nimport React, { useState } from \"react\";\r\nimport { Document, Page } from \"react-pdf\";\r\nimport { GlobalWorkerOptions, version as pdfjsVersion } from \"pdfjs-dist\";\r\nimport \"./Paper.css\";\r\n\r\n// Use the worker from the installed pdfjs-dist version\r\nGlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsVersion}/pdf.worker.min.js`;\r\n\r\nconst Paper = () => {\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [loadError, setLoadError] = useState(\"\");\r\n\r\n  const pdfFile = \"/Files/TEST DOCUMENT FOR WEB DEVELOPMENT.pdf\"; // or your Azure URL\r\n\r\n  const onDocumentLoadSuccess = ({ numPages }) => {\r\n    setNumPages(numPages);\r\n    setLoadError(\"\");\r\n  };\r\n\r\n  const onDocumentLoadError = (err) => {\r\n    console.error(\"PDF load error:\", err);\r\n    setLoadError(\"Failed to load PDF file.\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"paper-container\">\r\n      <h1 className=\"paper-title\">Research Paper Viewer</h1>\r\n\r\n      <div className=\"paper-viewer scroll-mode\">\r\n        <Document\r\n          file={pdfFile}\r\n          onLoadSuccess={onDocumentLoadSuccess}\r\n          onLoadError={onDocumentLoadError}\r\n          loading={<p>Loading PDF…</p>}\r\n          error={<p>{loadError || \"Failed to load PDF file.\"}</p>}\r\n        >\r\n          {numPages &&\r\n            Array.from({ length: numPages }, (_, i) => (\r\n              <Page\r\n                key={`page_${i + 1}`}\r\n                pageNumber={i + 1}\r\n                renderTextLayer={false}\r\n                renderAnnotationLayer={false}\r\n                className=\"pdf-page\"\r\n              />\r\n            ))}\r\n        </Document>\r\n      </div>\r\n\r\n      <div className=\"paper-download\">\r\n        <a href={pdfFile} download className=\"download-btn\">\r\n          ⬇ Download PDF\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paper;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}